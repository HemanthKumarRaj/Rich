inux at命令使用案例
1摘要：用户使用linux at命令在指定时刻执行指定的命令序列。也就是说，该命令至少需要指定一个命令、一个执行时间才能够正常运行
2标签：linux at命令  linux at命令详解  使用案例
Oracle帮您准确洞察各个物流环节
linux at命令
用户使用linux at命令在指定时刻执行指定的命令序列。也就是说，该命令至少需要指定一个命令、一个执行时间才能够正常运行。linux at命令能够只指定时间，也能够时间和日期一起指定。需要注意的是，指定时间有个系统判别问题。比如说：用户现在指定了一个执行时间：凌晨3:20，而发出linux at命令的时间是头天晚上的20:00，那么究竟是在哪一天执行该命令呢？假如用户在3:20以前仍然在工作，那么该命令将在这个时候完成；假如用户3:20以前就退出了工作状态，那么该命令将在第二天凌晨才得到执行。下面是linux at命令的语法格式：
at ［-V］ ［-q 队列］ ［-f 文档名］ ［-mldbv］ 时间
at -c 作业 ［作业...］
at允许使用一套相当复杂的指定时间的方法，实际上是将POSIX.2标准扩展了。他能够接受在当天的hh:mm（小时:分钟）式的时间指定。假如该时间已过去，那么就放在第二天执行。当然也能够使用midnight（深夜），noon（中午），teatime（饮茶时间，一般是下午4点）等比较模糊的
词语来指定时间。用户还能够采用12小时计时制，即在时间后面加上AM（上午）或PM（下午）来说明是上午还是下午。
也能够指定命令执行的具体日期，指定格式为month day（月 日）或mm/dd/yy（月/日/年）或dd.mm.yy（日.月.年）。指定的日期必须跟在指定时间的后面。
上面介绍的都是绝对计时法，其实还能够使用相对计时法，这对于安排不久就要执行的命令是很有好处的。指定格式为：now + count time-units ，now就是当前时间，time-units是时间单位，这里能够是minutes（分钟）、hours（小时）、days（天）、weeks（星期）。count是时间的数量，究竟是几天，还是几小时，等等。
更有一种计时方法就是直接使用today（今天）、tomorrow（明天）来指定完成命令的时间。下面通过一些例子来说明具体用法。
［例2］ 指定在今天下午5:30执行某命令。假设现在时间是中午12:30，1999年2月24日，其命令格式如下：
at 5:30pm
at 17:30
at 17:30 today
at now + 5 hours
at now + 300 minutes
at 17:30 24.2.99
at 17:30 2/24/99
at 17:30 Feb 24
以上这些命令表达的意义是完全相同的，所以在安排时间的时候完万能够根据个人喜好和具体情况自由选择。一般采用绝对时间的24小时计时法能够避免由于用户自己的疏忽造成计时错误的情况发生，例如上例能够写成：
at 17:30 2/24/99
这样很清楚，而且别人也看得懂。
对于linux at命令来说，需要定时执行的命令是从标准输入或使用-f选项指定的文档中读取并执行的。假如linux at命令是从一个使用su命令转换到用户shell中
执行的，那么当前用户被认为是执行用户，任何的错误和输出结果都会送给这个用户。但是假如有邮件送出的话，收到邮件的将是原来的用户，也就是登录时shell的任何者。
［例3］
$ at -f work 4pm + 3 days
在三天后下午4点执行文档work中的作业。
$ at -f work 10am Jul 31
在7月31日上午10点执行文档work中的作业。
在任何情况下，终极用户都能够使用这个命令。对于其他用户来说，是否能够使用就取决于两个文档：/etc/at.allow和/etc/at.deny。
假如/etc/at.allow文档存在的话，那么只有在其中列出的用户才能够使用linux at命令；假如该文档不存在，那么将检查/etc/at.deny文档
是否存在，在这个文档中列出的用户均不能使用该命令。假如两个文档都不存在，那么只有终极用户能够使用该命令；空的/etc/at.deny文档意味着所有的用户都能够使用该命令，这也是默认状态。
下面对命令中的参数进行说明。
-V 将标准版本号打印到标准错误中。
-q queue 使用指定的队列。队列名称是由单个字母组成，合法的队列名能够由a-z或A-Z。a队列是linux at命令的默认队列。
-m 作业结束后发送邮件给执行linux at命令的用户。
-f file 使用该选项将使命令从指定的file读取，而不是从标准输入读取。
-l atq命令的一个别名。该命令用于查看安排的作业序列，他将列出用户排在队列中的作业，假如是终极用户，则列出队列中的任何工作。
命令的语法格式如下:
atq ［-V］ ［-q 队列］ ［-v］
-d atrm 命令的一个别名。该命令用于删除指定要执行的命令序列，语法格式如下：
atrm ［-V］ 作业 ［作业...］
-c 将命令行上所列的作业送到标准输出。
［例4］ 找出系统中任何以txt为后缀名的文档，并且进行打印。打印结束后给用户foxy发出邮件通知取件。指定时间为十二月二十五日凌晨两点。
首先键入：
$ at 2:00 12/25/99
然后系统出现at>提示符，等待用户输入进一步的信息，也就是需要执行的命令序列：
at> find / -name "*.txt"|lpr
at> echo "foxy：All texts have been printed.You can take them over.Good day!River" |mail -s "job done" foxy
输入完每一行指令然后回车，任何指令序列输入完毕后，使用组合键结束linux at命令的输入。这时候屏幕将出现如下信息：
warning:command will be executed using /bin/sh.
job 1 at 1999-12-25 02:00
提醒用户将使用哪个shell来执行该命令序列。
实际上假如命令序列较长或经常被执行的时候，一般都采用将该序列写到一个文档中，然后将文档作为linux at命令的输入来处理。这样不容易出错。
［例5］ 上面的例子能够修改如下：
将命令序列写入到文档/tmp/printjob，语句为：
$ at -f /tmp/printjob 2:00 12/25/99
这样一来，linux at命令将使用文档中的命令序列，屏幕显示如下：
Warning:command will be executed using /bin/sh.
job 2 at 1999-12-25 02:00
/sbin/service crond start //启动服务
/sbin/service crond stop //关闭服务
/sbin/service crond restart //重启服务
/sbin/service crond reload //重新载入配置
可以将这个服务在系统启动的时候也自动启动：
在/etc/rc.d/rc.local这个脚本的末尾加上：
/sbin/service crond start
以上是linux at命令的使用案例。
